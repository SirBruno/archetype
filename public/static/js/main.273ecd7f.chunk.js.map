{"version":3,"sources":["Contexts/EnvContext.js","Components/Books.js","Containers/App/App.js","index.js"],"names":["EnvContext","React","createContext","EnvProvider","Provider","Books","useState","books","setBooks","lastId","length","id","testContext","useContext","useEffect","console","log","ApolloClient","uri","query","gql","then","result","data","map","key","title","author","description","App","state","res","axios","get","params","document","getElementById","value","setState","innerText","catch","err","className","placeholder","onClick","sendData","Component","ReactDOM","render"],"mappings":"sQAEMA,EAAaC,IAAMC,gBAEZC,EAAcH,EAAWI,SAEvBJ,I,6SCFA,SAASK,IAAS,IAAD,IAEFC,mBAAS,IAFP,mBAErBC,EAFqB,KAEdC,EAFc,KAGtBC,EAAM,UAAGF,EAAMA,EAAMG,OAAS,UAAxB,aAAG,EAAyBC,GAClCC,EAAcC,qBAAWb,GA2B/B,OAzBAc,qBAAU,WAENC,QAAQC,IAAIJ,GAEG,IAAIK,IAAa,CAC5BC,IAAK,oDAGFC,MAAM,CACTA,MAAOC,YAAF,OAUNC,MAAK,SAAAC,GACJd,EAASc,EAAOC,KAAKhB,OACrBQ,QAAQC,IAAIP,QAEjB,CAACA,IAGA,6BACKF,EAAMiB,KAAI,SAAAjB,GAAK,OACZ,yBAAKkB,IAAKlB,EAAMI,IACZ,4BAAKJ,EAAMmB,OACX,2BAAInB,EAAMoB,QACV,2BAAIpB,EAAMqB,kB,ICYfC,E,YA/Cb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,IAAK,IAHK,E,wEAOF,IAAD,OACTC,IAAMC,IAAN,OAAkB,CAChBC,OAAQ,CACNR,MAAOS,SAASC,eAAe,kBAAkBC,MACjDV,OAAQQ,SAASC,eAAe,mBAAmBC,MACnDT,YAAaO,SAASC,eAAe,wBAAwBC,SAE9DhB,MAAK,SAAAU,GACNhB,QAAQC,IAAI,OAASe,GACrB,EAAKO,SAAS,CAAEP,IAAKA,EAAIR,OACzBY,SAASC,eAAe,gBAAgBG,UAAY,EAAKT,MAAMC,OAC9DS,OAAM,SAAAC,GACP,EAAKH,SAAS,CAAEP,IAAKU,IACrBN,SAASC,eAAe,gBAAgBG,UAAY,EAAKT,MAAMC,IAC/DhB,QAAQC,IAAIyB,Q,+BAIN,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,6BACE,2BAAO/B,GAAG,iBAAiBgC,YAAY,UACvC,6BACA,2BAAOhC,GAAG,kBAAkBgC,YAAY,WACxC,6BACA,2BAAOhC,GAAG,uBAAuBgC,YAAY,gBAC7C,6BACA,4BAAQC,QAAS,kBAAM,EAAKC,aAA5B,QACA,6BACA,uBAAGlC,GAAG,gBAAN,mCACA,kBAACR,EAAD,CAAakC,MAAM,uBACjB,kBAAChC,EAAD,a,GAxCMyC,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASC,eAAe,W","file":"static/js/main.273ecd7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst EnvContext = React.createContext();\r\n\r\nexport const EnvProvider = EnvContext.Provider;\r\n\r\nexport default EnvContext;","import React, { useState, useEffect, useContext } from 'react';\r\nimport ApolloClient, { gql } from 'apollo-boost';\r\nimport EnvContext from '../Contexts/EnvContext';\r\n\r\nexport default function Books() {\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const lastId = books[books.length - 1]?.id;\r\n    const testContext = useContext(EnvContext);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(testContext);\r\n\r\n        const client = new ApolloClient({\r\n            uri: 'https://archetypeofficial.herokuapp.com/graphql'\r\n        });\r\n\r\n        client.query({\r\n            query: gql`\r\n                {\r\n                    books {\r\n                        id\r\n                        title\r\n                        author\r\n                        description\r\n                    }\r\n                }\r\n            `\r\n        }).then(result => {\r\n            setBooks(result.data.books);\r\n            console.log(lastId);\r\n        });\r\n    }, [lastId]);\r\n\r\n    return (\r\n        <div>\r\n            {books.map(books =>\r\n                <div key={books.id}>\r\n                    <h3>{books.title}</h3>\r\n                    <p>{books.author}</p>\r\n                    <i>{books.description}</i>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Books from '../../Components/Books';\r\nimport { EnvProvider } from '../../Contexts/EnvContext';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      res: ''\r\n    }\r\n  }\r\n\r\n  sendData() {\r\n    axios.get(`/add`, {\r\n      params: {\r\n        title: document.getElementById(\"sendData-title\").value,\r\n        author: document.getElementById(\"sendData-author\").value,\r\n        description: document.getElementById(\"sendData-description\").value\r\n      }\r\n    }).then(res => {\r\n      console.log(\"res:\" + res);\r\n      this.setState({ res: res.data });\r\n      document.getElementById(\"req-response\").innerText = this.state.res;\r\n    }).catch(err => {\r\n      this.setState({ res: err });\r\n      document.getElementById(\"req-response\").innerText = this.state.res;\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <input id=\"sendData-title\" placeholder=\"Title\" />\r\n          <br />\r\n          <input id=\"sendData-author\" placeholder=\"Author\" />\r\n          <br />\r\n          <input id=\"sendData-description\" placeholder=\"Description\" />\r\n          <br />\r\n          <button onClick={() => this.sendData()}>Send</button>\r\n          <br />\r\n          <p id=\"req-response\">request's response goes here...</p>\r\n          <EnvProvider value=\"testing the context\">\r\n            <Books />\r\n          </EnvProvider>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Containers/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}