{"version":3,"sources":["Contexts/EnvContext.js","Components/Books.js","Containers/App/App.js","index.js"],"names":["EnvContext","React","createContext","EnvProvider","Provider","Books","useState","books","setBooks","lastId","length","id","uri","useContext","useEffect","ApolloClient","query","gql","then","result","data","console","log","map","key","title","author","description","process","ReactDOM","render","client","dataTitle","createRef","dataAuthor","dataDescription","className","ref","placeholder","onClick","mutate","variables","current","value","mutation","document","getElementById"],"mappings":"2MAEMA,EAAaC,IAAMC,gBAEZC,EAAcH,EAAWI,SAEvBJ,I,yRCFA,SAASK,IAAS,IAAD,IAELC,mBAAS,IAFJ,mBAExBC,EAFwB,KAEjBC,EAFiB,KAGzBC,EAAM,UAAGF,EAAMA,EAAMG,OAAS,UAAxB,aAAG,EAAyBC,GAClCC,EAAMC,qBAAWb,GAuBvB,OArBAc,qBAAU,WAEM,IAAIC,IAAa,CAAEH,QAE3BI,MAAM,CACZA,MAAOC,YAAF,OAUHC,MAAK,SAAAC,GACPX,EAASW,EAAOC,KAAKb,OACrBc,QAAQC,IAAIb,QAEX,CAACA,EAAQG,IAGX,6BACEL,EAAMgB,KAAI,SAAAhB,GAAK,OACf,yBAAKiB,IAAKjB,EAAMI,IACf,4BAAKJ,EAAMkB,OACX,2BAAIlB,EAAMmB,QACV,2BAAInB,EAAMoB,kB,qUChCf,IAAMf,EAAMgB,kDCDZC,IAASC,OAAO,mBDGD,WACb,IAAMC,EAAS,IAAIhB,IAAa,CAAEH,QAE5BoB,EAAY/B,IAAMgC,YAClBC,EAAajC,IAAMgC,YACnBE,EAAkBlC,IAAMgC,YAsB9B,OACE,yBAAKG,UAAU,OACb,6BACE,2BAAOC,IAAKL,EAAWM,YAAY,UACnC,6BACA,2BAAOD,IAAKH,EAAYI,YAAY,WACpC,6BACA,2BAAOD,IAAKF,EAAiBG,YAAY,gBACzC,6BACA,4BAAQC,QAAS,WA5BrBR,EAAOS,OAAO,CACZC,UAAW,CACThB,MAAOO,EAAUU,QAAQC,MACzBjB,OAAQQ,EAAWQ,QAAQC,MAC3BhB,YAAaQ,EAAgBO,QAAQC,OAEvCC,SAAU3B,YAAF,OASPC,KAAKG,QAAQC,IAAI,qBAahB,QACA,6BACA,uBAAGX,GAAG,gBAAN,mCACA,kBAACR,EAAD,CAAawC,MAAO/B,GAClB,kBAACP,EAAD,WC3CM,MAASwC,SAASC,eAAe,W","file":"static/js/main.736acde9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst EnvContext = React.createContext();\r\n\r\nexport const EnvProvider = EnvContext.Provider;\r\n\r\nexport default EnvContext;","import React, { useState, useEffect, useContext } from 'react';\r\nimport ApolloClient, { gql } from 'apollo-boost';\r\nimport EnvContext from '../Contexts/EnvContext';\r\n\r\nexport default function Books() {\r\n\r\n\tconst [books, setBooks] = useState([]);\r\n\tconst lastId = books[books.length - 1]?.id;\r\n\tconst uri = useContext(EnvContext);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst client = new ApolloClient({ uri });\r\n\r\n\t\tclient.query({\r\n\t\t\tquery: gql`\r\n                {\r\n\t\t\t\t\t\t\t\t\tbooks {\r\n\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\t\t\t\t\tauthor\r\n\t\t\t\t\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\t\t\t\t}\r\n                }\r\n            `\r\n\t\t}).then(result => {\r\n\t\t\tsetBooks(result.data.books);\r\n\t\t\tconsole.log(lastId);\r\n\t\t});\r\n\t}, [lastId, uri]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{books.map(books =>\r\n\t\t\t\t<div key={books.id}>\r\n\t\t\t\t\t<h3>{books.title}</h3>\r\n\t\t\t\t\t<p>{books.author}</p>\r\n\t\t\t\t\t<i>{books.description}</i>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport ApolloClient, { gql } from 'apollo-boost';\r\nimport Books from '../../Components/Books';\r\nimport { EnvProvider } from '../../Contexts/EnvContext';\r\n\r\nconst uri = process.env.REACT_APP_URI;\r\n\r\nexport default function App () {\r\n  const client = new ApolloClient({ uri });\r\n\r\n  const dataTitle = React.createRef();\r\n  const dataAuthor = React.createRef();\r\n  const dataDescription = React.createRef();\r\n\r\n  const sendData = () => {\r\n    client.mutate({\r\n      variables: {\r\n        title: dataTitle.current.value,\r\n        author: dataAuthor.current.value,\r\n        description: dataDescription.current.value\r\n      },\r\n      mutation: gql`\r\n        mutation addBook($title: String, $author: String, $description: String){\r\n          addBook(title: $title, author: $author, description: $description) {\r\n            title\r\n            author\r\n            description\r\n          }\r\n        }\r\n    `,\r\n    }).then(console.log('Book Added! ;)'));\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <input ref={dataTitle} placeholder=\"Title\" />\r\n        <br />\r\n        <input ref={dataAuthor} placeholder=\"Author\" />\r\n        <br />\r\n        <input ref={dataDescription} placeholder=\"Description\" />\r\n        <br />\r\n        <button onClick={() => sendData()}>Send</button>\r\n        <br />\r\n        <p id=\"req-response\">request's response goes here...</p>\r\n        <EnvProvider value={uri}>\r\n          <Books />\r\n        </EnvProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Containers/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}