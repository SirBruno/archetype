{"version":3,"sources":["Contexts/EnvContext.js","Components/Books.js","Containers/App/App.js","index.js"],"names":["EnvContext","React","createContext","EnvProvider","Provider","Books","useState","books","setBooks","lastId","length","id","testContext","useContext","console","log","process","useEffect","ApolloClient","uri","query","gql","then","result","data","map","key","title","author","description","App","client","className","placeholder","onClick","mutate","variables","document","getElementById","value","mutation","ReactDOM","render"],"mappings":"2MAEMA,EAAaC,IAAMC,gBAEZC,EAAcH,EAAWI,SAEvBJ,I,6SCFA,SAASK,IAAS,IAAD,IAEFC,mBAAS,IAFP,mBAErBC,EAFqB,KAEdC,EAFc,KAGtBC,EAAM,UAAGF,EAAMA,EAAMG,OAAS,UAAxB,aAAG,EAAyBC,GAClCC,EAAcC,qBAAWb,GAgC/B,OA3BAc,QAAQC,IAAIH,GACZE,QAAQC,IAAR,wBAA6BC,4CAE7BC,qBAAU,WAGS,IAAIC,IAAa,CAC5BC,IAAI,GAAD,OAAKH,0CAAL,cAGAI,MAAM,CACTA,MAAOC,YAAF,OAUNC,MAAK,SAAAC,GACJf,EAASe,EAAOC,KAAKjB,OACrBO,QAAQC,IAAIN,QAEjB,CAACA,EA5BE,4CA+BF,6BACKF,EAAMkB,KAAI,SAAAlB,GAAK,OACZ,yBAAKmB,IAAKnB,EAAMI,IACZ,4BAAKJ,EAAMoB,OACX,2BAAIpB,EAAMqB,QACV,2BAAIrB,EAAMsB,kB,qUC1C9B,IA8CeC,EA5CH,WACV,IAAMC,EAAS,IAAIb,IAAa,CAC9BC,IAAI,GAAD,OAJgD,0CAIhD,cAsBL,OACE,yBAAKa,UAAU,OACb,6BACE,2BAAOrB,GAAG,iBAAiBsB,YAAY,UACvC,6BACA,2BAAOtB,GAAG,kBAAkBsB,YAAY,WACxC,6BACA,2BAAOtB,GAAG,uBAAuBsB,YAAY,gBAC7C,6BACA,4BAAQC,QAAS,WA3BrBH,EAAOI,OAAO,CACZC,UAAW,CACTT,MAAOU,SAASC,eAAe,kBAAkBC,MACjDX,OAAQS,SAASC,eAAe,mBAAmBC,MACnDV,YAAaQ,SAASC,eAAe,wBAAwBC,OAE/DC,SAAUnB,YAAF,OASPC,KAAKR,QAAQC,IAAI,qBAYhB,QACA,6BACA,uBAAGJ,GAAG,gBAAN,mCACA,kBAACR,EAAD,CAAaoC,MAAM,uBACjB,kBAAClC,EAAD,UCvCVoC,IAASC,OAAO,kBAAC,EAAD,MAASL,SAASC,eAAe,W","file":"static/js/main.b5412be3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst EnvContext = React.createContext();\r\n\r\nexport const EnvProvider = EnvContext.Provider;\r\n\r\nexport default EnvContext;","import React, { useState, useEffect, useContext } from 'react';\r\nimport ApolloClient, { gql } from 'apollo-boost';\r\nimport EnvContext from '../Contexts/EnvContext';\r\n\r\nexport default function Books() {\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const lastId = books[books.length - 1]?.id;\r\n    const testContext = useContext(EnvContext);\r\n    const apiUrl = process.env.NODE_ENV === 'production'\r\n        ? 'https://archetypeofficial.herokuapp.com'\r\n        : process.env.REACT_APP_URI;\r\n\r\n    console.log(testContext);\r\n    console.log(`React Env Dev:${process.env.REACT_APP_URI}`);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const client = new ApolloClient({\r\n            uri: `${process.env.REACT_APP_URI}/graphql`\r\n        });\r\n\r\n        client.query({\r\n            query: gql`\r\n                {\r\n                    books {\r\n                        id\r\n                        title\r\n                        author\r\n                        description\r\n                    }\r\n                }\r\n            `\r\n        }).then(result => {\r\n            setBooks(result.data.books);\r\n            console.log(lastId);\r\n        });\r\n    }, [lastId, apiUrl]);\r\n\r\n    return (\r\n        <div>\r\n            {books.map(books =>\r\n                <div key={books.id}>\r\n                    <h3>{books.title}</h3>\r\n                    <p>{books.author}</p>\r\n                    <i>{books.description}</i>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ApolloClient, { gql } from 'apollo-boost';\r\nimport Books from '../../Components/Books';\r\nimport { EnvProvider } from '../../Contexts/EnvContext';\r\nconst apiUrl = process.env.NODE_ENV === 'production' ? 'https://archetypeofficial.herokuapp.com' : process.env.REACT_APP_URI;\r\n\r\nconst App = () => {\r\n  const client = new ApolloClient({\r\n    uri: `${apiUrl}/graphql`\r\n  });\r\n\r\n  const sendData = () => {\r\n    client.mutate({\r\n      variables: {\r\n        title: document.getElementById(\"sendData-title\").value,\r\n        author: document.getElementById(\"sendData-author\").value,\r\n        description: document.getElementById(\"sendData-description\").value\r\n      },\r\n      mutation: gql`\r\n        mutation addBook($title: String, $author: String, $description: String){\r\n          addBook(title: $title, author: $author, description: $description) {\r\n            title\r\n            author\r\n            description\r\n          }\r\n        }\r\n    `,\r\n    }).then(console.log('Book Added! ;)'));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <input id=\"sendData-title\" placeholder=\"Title\" />\r\n        <br />\r\n        <input id=\"sendData-author\" placeholder=\"Author\" />\r\n        <br />\r\n        <input id=\"sendData-description\" placeholder=\"Description\" />\r\n        <br />\r\n        <button onClick={() => sendData()}>Send</button>\r\n        <br />\r\n        <p id=\"req-response\">request's response goes here...</p>\r\n        <EnvProvider value=\"testing the context\">\r\n          <Books />\r\n        </EnvProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Containers/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}