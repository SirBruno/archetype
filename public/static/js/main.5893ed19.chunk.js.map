{"version":3,"sources":["Queries/GET_DATA.js","Components/Books.js","Containers/Home/Home.js","Containers/Single/Single.js","Containers/Post/Post.js","index.js"],"names":["GET_BOOKS","gql","Books","props","useState","books","setBooks","client","useApolloClient","dataTitle","React","createRef","dataAuthor","dataDescription","useQuery","loading","error","data","useEffect","deleteBook","_id","a","mutate","variables","mutation","deletedBook","id","deletedId","filter","book","addBook","title","current","value","author","description","res","length","ref","placeholder","onClick","map","key","style","display","Button","background","color","marginLeft","Home","className","Single","topicId","useParams","Post","match","useRouteMatch","to","url","path","ApolloClient","uri","process","ReactDOM","render","document","getElementById"],"mappings":"mbAEA,IAWeA,EAXGC,IAAH,K,+fCIA,SAASC,EAAMC,GAAQ,IAAD,EAEVC,mBAAS,IAFC,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAG9BC,EAASC,cACTC,EAAYC,IAAMC,YAClBC,EAAaF,IAAMC,YACnBE,EAAkBH,IAAMC,YANM,EAQHG,YAASd,GAAlCe,EAR4B,EAQ5BA,QAASC,EARmB,EAQnBA,MAAOC,EARY,EAQZA,KAMxB,GAJAC,qBAAU,WACLD,GAAMX,EAASW,EAAKZ,SACtB,CAACY,IAEAD,EAAO,MAAM,IAAIA,EAErB,IAAMG,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACQd,EAAOe,OAAO,CACvCC,UAAW,CAAEH,OACbI,SAAUvB,IAAF,OAHS,cACZwB,EADY,gBASMA,EAAYR,KAAKE,WAAWO,GATlC,OASZC,EATY,OAUlBrB,EAASD,EAAMuB,QAAO,SAAAC,GAAI,OAAIA,EAAKH,KAAOC,MAVxB,2CAAH,sDAaVG,EAAO,uCAAG,8BAAAT,EAAA,sEACGd,EAAOe,OAAO,CAC/BC,UAAW,CACVQ,MAAOtB,EAAUuB,QAAQC,MACzBC,OAAQtB,EAAWoB,QAAQC,MAC3BE,YAAatB,EAAgBmB,QAAQC,OAEtCT,SAAUvB,IAAF,OAPM,cACTmC,EADS,gBAmBIA,EAAInB,KAAKa,QAnBb,OAmBTD,EAnBS,OAoBfvB,EAAS,GAAD,mBAAKD,GAAL,CAAYwB,KApBL,2CAAH,qDAuBb,OAAId,EACI,yCACGV,EAAMgC,OAAS,EAExB,6BACC,2BAAOC,IAAK7B,EAAW8B,YAAY,UACnC,6BACA,2BAAOD,IAAK1B,EAAY2B,YAAY,WACpC,6BACA,2BAAOD,IAAKzB,EAAiB0B,YAAY,gBACzC,6BACA,4BAAQC,QAAS,kBAAMV,MAAvB,QACA,6BACA,uBAAGJ,GAAG,gBAAN,mCACCrB,EAAMoC,KAAI,SAAApC,GAAK,OACf,yBAAKqC,IAAKrC,EAAMqB,IACf,wBAAIiB,MAAO,CAAEC,QAAS,WAAavC,EAAM0B,OACzC,kBAACc,EAAA,EAAD,CAAQL,QAAS,kBAAMrB,EAAWd,EAAMqB,KAAKiB,MAAO,CACnDG,WAAY,OACZC,MAAO,OACPC,WAAY,KAHb,KAKA,2BAAI3C,EAAM6B,QACV,2BAAI7B,EAAM8B,kBAKD,KCnFA,SAASc,IACpB,OACE,yBAAKC,UAAU,QACb,6BACE,kBAAChD,EAAD,QCJK,SAASiD,IAAW,IAC3BC,EAAYC,cAAZD,QACN,OAAO,mDAAyBA,GCDnB,SAASE,IAEtB,IAAMC,EAAQC,cAEd,OACE,6BACI,wCACA,4BACA,4BACE,kBAAC,IAAD,CAAMC,GAAE,UAAKF,EAAMG,IAAX,YAAR,2BAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMI,KAAX,cACT,kBAACR,EAAD,OAEF,kBAAC,IAAD,CAAOQ,KAAMJ,EAAMI,MACjB,yDCbZ,IACMpD,EAAS,IAAIqD,IAAa,CAAEC,IADtBC,oDAgCZC,IAASC,OAAO,mBA5BhB,WAEE,OACE,kBAAC,IAAD,CAAgBzD,OAAQA,GACtB,yBAAK2C,UAAU,OACb,kBAAC,IAAD,KACE,6BACE,6BACE,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,SACV,kBAACL,EAAD,OAEF,kBAAC,IAAD,CAAOK,KAAK,KACV,kBAACV,EAAD,cAYA,MAASgB,SAASC,eAAe,W","file":"static/js/main.5893ed19.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nconst GET_BOOKS = gql`\r\n{\r\n  books {\r\n    id\r\n    title\r\n    author\r\n    description\r\n  }\r\n}\r\n`\r\n\r\nexport default GET_BOOKS;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\nimport GET_BOOKS from '../Queries/GET_DATA'\r\nimport gql from 'graphql-tag';\r\n\r\nexport default function Books(props) {\r\n\r\n\tconst [books, setBooks] = useState([])\r\n\tconst client = useApolloClient();\r\n\tconst dataTitle = React.createRef();\r\n\tconst dataAuthor = React.createRef();\r\n\tconst dataDescription = React.createRef();\r\n\r\n\tconst { loading, error, data } = useQuery(GET_BOOKS);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) setBooks(data.books)\r\n\t}, [data]);\r\n\t\r\n\tif (error) throw new error()\r\n\r\n\tconst deleteBook = async (_id) => {\r\n\t\tconst deletedBook = await client.mutate({\r\n\t\t\tvariables: { _id },\r\n\t\t\tmutation: gql`\r\n        mutation deleteBook($_id: String){\r\n          deleteBook(_id: $_id) { id }\r\n        }\r\n    `,\r\n\t\t})\r\n\t\tconst deletedId = await deletedBook.data.deleteBook.id;\r\n\t\tsetBooks(books.filter(book => book.id !== deletedId))\r\n\t}\r\n\r\n\tconst addBook = async () => {\r\n\t\tconst res = await client.mutate({\r\n\t\t\tvariables: {\r\n\t\t\t\ttitle: dataTitle.current.value,\r\n\t\t\t\tauthor: dataAuthor.current.value,\r\n\t\t\t\tdescription: dataDescription.current.value\r\n\t\t\t},\r\n\t\t\tmutation: gql`\r\n        mutation addBook($title: String, $author: String, $description: String){\r\n          addBook(title: $title, author: $author, description: $description) {\r\n            id\r\n            title\r\n            author\r\n            description\r\n          }\r\n        }\r\n    `,\r\n\t\t})\r\n\r\n\t\tconst book = await res.data.addBook;\r\n\t\tsetBooks([...books, book]);\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <p>Loading...</p>\r\n\t} else if (books.length > 0) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input ref={dataTitle} placeholder=\"Title\" />\r\n\t\t\t\t<br />\r\n\t\t\t\t<input ref={dataAuthor} placeholder=\"Author\" />\r\n\t\t\t\t<br />\r\n\t\t\t\t<input ref={dataDescription} placeholder=\"Description\" />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button onClick={() => addBook()}>Send</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p id=\"req-response\">request's response goes here...</p>\r\n\t\t\t\t{books.map(books =>\r\n\t\t\t\t\t<div key={books.id}>\r\n\t\t\t\t\t\t<h3 style={{ display: \"inline\" }}>{books.title}</h3>\r\n\t\t\t\t\t\t<Button onClick={() => deleteBook(books.id)} style={{\r\n\t\t\t\t\t\t\tbackground: \"#000\",\r\n\t\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t\t\tmarginLeft: 10\r\n\t\t\t\t\t\t}}>X</Button>\r\n\t\t\t\t\t\t<p>{books.author}</p>\r\n\t\t\t\t\t\t<i>{books.description}</i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else return null\r\n}","import React from 'react';\r\nimport Books from '../../Components/Books';\r\n\r\nexport default function Home() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div>\r\n          <Books />\r\n        </div>\r\n      </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Single () {\r\n  let { topicId } = useParams();\r\n  return <h3>Requested topic ID: {topicId}</h3>;\r\n}","import React from 'react'\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\"\r\nimport Single from '../Single/Single';\r\n\r\nexport default function Post() {\r\n\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n        <h2>Post ...</h2>\r\n        <ul>\r\n        <li>\r\n          <Link to={`${match.url}/single`}>Single post (example)</Link>\r\n        </li>\r\n      </ul>\r\n        <Switch>\r\n          <Route path={`${match.path}/:topicId`}>\r\n            <Single />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <h3>Please select a topic.</h3>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\r\nimport ApolloClient from 'apollo-boost'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport Home from './Containers/Home/Home'\r\nimport Post from './Containers/Post/Post'\r\n\r\nconst uri = process.env.REACT_APP_URI;\r\nconst client = new ApolloClient({ uri });\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div>\r\n            <nav>\r\n              <Link to=\"/\">Home</Link>\r\n              <Link to=\"/post\">Post</Link>\r\n            </nav>\r\n            <Switch>\r\n              <Route path=\"/post\">\r\n                <Post />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\n// **********************************************************\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}